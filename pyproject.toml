[build-system]
requires = ["setuptools>=45", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
local_scheme = "dirty-tag"
version_scheme = "no-guess-dev"
write_to = "src/low_sim_pdbbind/_version.py"

[tool.black]
line-length = 88
# Keep this in sync with ISORT_SOURCE_PATHS variable in noxfile.py.
include = '/src/.*\.pyi?$|/tests/.*\.pyi?$|/docs/.*\.pyi?$|noxfile.py'

[tool.ruff]
cache-dir = ".cache/ruff"
# https://beta.ruff.rs/docs/rules
select = [
    "E", #pycodestyle (errors)
    "F", #pyflakes
    "I", # isort
    "NPY", # numpy
    "PD", # pandas-vet: https://pypi.org/project/pandas-vet/
    "PLE", # pylint errors
    "PT", # flake8-pytest-style: https://pypi.org/project/flake8-pytest-style/
    "RUF", #ruff specific
]
ignore = [
    "E501" # "line too long" (for strings and *comments*, which cannot be autofixed)
]

[tool.ruff.isort]
known-first-party = [
    "low_sim_pdbbind",

]

[tool.pytest.ini_options]
cache_dir = ".cache/pytest_cache"
minversion = "6.0"
addopts = "-rv --color=yes"
testpaths = ['tests']
log_cli = true
log_cli_level = "WARNING"
log_cli_format = "%(levelname)s:%(name)s: %(message)s"

[tool.coverage.run]
source_pkgs = ['low_sim_pdbbind']

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@overload",
]

[tool.mypy]
# paths
cache_dir = ".cache/mypy_cache"
files = [
    'src/',
    'tests/',
    'noxfile.py',
]
# Make mypy work properly with namespace package:
# ( https://mypy.readthedocs.io/en/stable/running_mypy.html#mapping-paths-to-modules )
mypy_path = 'src'
namespace_packages = true
explicit_package_bases = true
# General settings
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_decorators = false
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = 'tests.*'
disallow_untyped_defs = false
check_untyped_defs = true

[[tool.mypy.overrides]]
module = 'noxfile'
disallow_untyped_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false

[tool.pyright]
reportMissingParameterType = 'warning'
reportPrivateImportUsage = false
